MathType Output Translator 1.0: "Coggle", "Coggle translator v1.1 by Design Science, Inc.", website

// Copyright (c) 1998-2014 by Design Science, Inc.
// License: You are allowed to create your own translators based on the contents of this file
// solely for use with MathType. It is recommended that you change the filename, title, and description
// in the first line of this file so as to reflect your modifications and the change of author and purpose.
// Design Science, Inc. is not responsible for any damages caused by the use of this file or derived works.

// $Header: /MathType/Translators/Coggle.tdl 2     5/09/14 11:05a Jimm $

include "MathJax-LaTeX (base vars).tdl";
// redefinitions of base variables
var/"BeginMathDisplay" = "\\(";
var/"BeginMathInline" = "\\(";
var/"EndMathDisplay" = "\\)";
var/"EndMathInline" = "\\)";

var/"EqnDataCmt" = "";

// Coggle needs a blank space after next row markers, and needs them escaped.

var/"NextRow" = "\\\ ";

include "MathJax-LaTeX (base rules).tdl";

// redefinition of base rules

// Must escape subscripts.
sub         = "\_#1";                      // subscript (normal, trailing)
sub/scan    = "{#1\_#2}";                  // subscript (scan)
subsup      = "\_#1^#2";                   // both super- and subscripts (normal, trailing)
sub/pre     = "{}\_#1" ;                   // subscript (leading)
subsup/pre  = "{}\_#1^#2";                 // both super- and subscripts (leading)

// Matrix translation ("array" allows for partition lines, but worse spacing than "matrix")
matrix      = "\begin{<MatrixEnv>}<MatrixAlignGroup> <newline> #\end{<MatrixEnv>}";      
matrix/c    = "\begin{<MatrixEnv>}<MatrixCenterAlignGroup> <newline> #\end{<MatrixEnv>}";      
matrix/l    = "\begin{<MatrixEnv>}<MatrixLeftAlignGroup> <newline> #\end{<MatrixEnv>}";      
matrix/r    = "\begin{<MatrixEnv>}<MatrixRightAlignGroup> <newline> #\end{<MatrixEnv>}";      
 
// Matrix row translation
matrow   = "# <NextRow><newline>";
matrow/last   = "# <newline>";

// Matrix element translation (except for last element in row) 
matelem/c   = "#&";           // Center justified 
matelem/l   = "#&";           // Left justified
matelem/r   = "#&";           // Right justified 
